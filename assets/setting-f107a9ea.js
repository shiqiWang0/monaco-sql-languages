var g=Object.defineProperty;var u=(i,t,e)=>t in i?g(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var l=(i,t,e)=>(u(i,typeof t!="symbol"?t+"":t,e),e);import{B as d,aM as S,aN as v,i as b,e as r}from"./index-d3ae3cf9.js";var p=Object.defineProperty,O=Object.getOwnPropertyDescriptor,T=(i,t,e,s)=>{for(var a=s>1?void 0:s?O(t,e):t,o=i.length-1,c;o>=0;o--)(c=i[o])&&(a=(s?c(t,e,a):c(a))||a);return s&&a&&p(t,e,a),a},n=(i,t)=>(e,s)=>t(e,s,i);let h=class extends d{constructor(t,e,s,a){super("setting");l(this,"state");this.builtin=t,this.locale=e,this.colorTheme=s,this.editor=a,this.state=new S}has(t){return Object.hasOwn(this.state.data,t)}getAll(){return this.getState().data}get(t){return this.state.data[t]}update(t){this.dispatch(e=>{Object.assign(e.data,t)})}remove(t){this.dispatch(e=>{Object.hasOwn(e.data,t)&&delete e.data[t]})}access(){const{EDITOR_ITEM_SETTING:t}=this.builtin.getState().constants,e={locale:this.locale.getState().current,colorTheme:this.colorTheme.getState().current,...this.getAll()},{current:s}=this.editor.getState();!s||!this.editor.getTab(t,s)?this.editor.open({id:t,name:this.locale.localize("activityBar.item.setting","Settings"),icon:"file",value:JSON.stringify(e,null,4),language:"json"},s):this.editor.setCurrent(t,s)}onChange(t){this.subscribe(v.OnChange,t)}};h=T([b(),n(0,r("builtin")),n(1,r("locale")),n(2,r("colorTheme")),n(3,r("editor"))],h);export{h as SettingsService};
