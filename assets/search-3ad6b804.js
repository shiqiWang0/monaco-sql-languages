var u=Object.defineProperty;var x=(i,e,t)=>e in i?u(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var c=(i,e,t)=>(x(i,typeof e!="symbol"?e+"":e,t),t);import{B as S,aJ as o,aK as h,f as p,aL as r,i as f}from"./index-d3ae3cf9.js";var v=Object.defineProperty,y=Object.getOwnPropertyDescriptor,K=(i,e,t,s)=>{for(var a=s>1?void 0:s?y(e,t):e,n=i.length-1,d;n>=0;n--)(d=i[n])&&(a=(s?d(e,t,a):d(a))||a);return s&&a&&v(e,t,a),a};let l=class extends S{constructor(){super("search");c(this,"state");this.state=new o}getValue(){return this.getState().value}getExpandedKeys(){return this.getState().expandedKeys}getMode(){return this.getState().mode}setValue(e){this.dispatch(t=>{t.value=e})}setValidateInfo(e){this.dispatch(t=>{t.validateInfo=typeof e=="string"?{status:"info",message:e}:e})}setMode(e){this.dispatch(t=>{t.mode=e})}toggleMode(e){const t=e||(this.getMode()===h.list?h.tree:h.list);this.setMode(t)}setResult(e,t){this.dispatch(s=>{s.result={total:t,results:e}})}setExpandedKeys(e){this.dispatch(t=>{t.expandedKeys=e})}expandAll(){this.dispatch(e=>{const t=e.result.results.map(s=>s.filename);e.expandedKeys=t})}addExpandedKeys(e){this.dispatch(t=>{t.expandedKeys.push(...p(e))})}removeExpandedKeys(e){this.dispatch(t=>{p(e).forEach(s=>{const a=t.expandedKeys.indexOf(s);a!==-1&&t.expandedKeys.splice(a,1)})})}reset(){this.setState(new o)}onChange(e){this.subscribe(r.onChange,e)}onSearch(e){this.subscribe(r.onSearch,e)}onSelect(e){this.subscribe(r.onSelect,e)}onEnter(e){this.subscribe(r.onEnter,e)}};l=K([f()],l);export{l as SearchService};
